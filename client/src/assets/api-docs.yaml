openapi: 3.0.1
info:
  title: Apollo Customer API
  description: Customer Admin API
  version: "1.0"
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /api/v1/admin/user-group/{userGroupId}:
    put:
      tags:
      - user-group-rest-controller
      operationId: updateUserGroup
      parameters:
      - name: userGroupId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroupRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/user-back/{userBackId}:
    put:
      tags:
      - user-back-rest-controller
      operationId: updateUserBack
      parameters:
      - name: userBackId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserBackRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
    delete:
      tags:
      - user-back-rest-controller
      operationId: deleteUserBack
      parameters:
      - name: userBackId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/user-back/{userBackId}/disable:
    put:
      tags:
      - user-back-rest-controller
      operationId: disableUserBack
      parameters:
      - name: userBackId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/roles/{id}:
    get:
      tags:
      - role-rest-controller
      operationId: getRoleById
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
    put:
      tags:
      - role-rest-controller
      operationId: updateRole
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
    delete:
      tags:
      - role-rest-controller
      operationId: deleteRoleById
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/products/{productId}:
    get:
      tags:
      - product-admin-rest-controller
      operationId: getProductId
      parameters:
      - name: productId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
    put:
      tags:
      - product-admin-rest-controller
      operationId: modifyProduct
      parameters:
      - name: productId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductAdminRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
    delete:
      tags:
      - product-admin-rest-controller
      operationId: deleteProduct
      parameters:
      - name: productId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/position/{positionId}:
    get:
      tags:
      - position-admin-rest-controller
      operationId: getPositionById
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: positionId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
    put:
      tags:
      - position-admin-rest-controller
      operationId: updatePosition
      parameters:
      - name: positionId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PositionAdminRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
    delete:
      tags:
      - position-admin-rest-controller
      operationId: deletePosition
      parameters:
      - name: positionId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/otp-template/{otpTemplateId}:
    get:
      tags:
      - otp-template-rest-controller
      operationId: getOtpTemplateById
      parameters:
      - name: otpTemplateId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
    put:
      tags:
      - otp-template-rest-controller
      operationId: updateOtpTemplate
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: otpTemplateId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOtpTemplateRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/occupation/{occupationId}:
    get:
      tags:
      - occupation-rest-controller
      operationId: getOccupationById
      parameters:
      - name: occupationId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
    put:
      tags:
      - occupation-rest-controller
      operationId: updateOccupation
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: occupationId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOccupationRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
    delete:
      tags:
      - occupation-rest-controller
      operationId: deleteOccupation
      parameters:
      - name: occupationId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/decision-policy/{decisionPolicyId}:
    get:
      tags:
      - decision-policy-admin-rest-controller
      operationId: getDecisionPolicyById
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: decisionPolicyId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
    put:
      tags:
      - decision-policy-admin-rest-controller
      operationId: updateDecisionPolicy
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: decisionPolicyId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DecisionPolicyRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
    delete:
      tags:
      - decision-policy-admin-rest-controller
      operationId: deleteDecisionPolicy
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: decisionPolicyId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/customers/{customerId}:
    get:
      tags:
      - customer-rest-controller
      operationId: getCustomerById
      parameters:
      - name: customerId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
    put:
      tags:
      - customer-rest-controller
      operationId: updateCustomer
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: customerId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCustomerRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/black-list/{blackListId}:
    get:
      tags:
      - black-list-rest-controller
      operationId: getBlackListById
      parameters:
      - name: blackListId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
    put:
      tags:
      - black-list-rest-controller
      operationId: updateBlackList
      parameters:
      - name: blackListId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlackListRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
    delete:
      tags:
      - black-list-rest-controller
      operationId: deleteBlackList
      parameters:
      - name: blackListId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/bank/{bankId}:
    get:
      tags:
      - bank-admin-rest-controller
      operationId: getBankById
      parameters:
      - name: bankId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
    put:
      tags:
      - bank-admin-rest-controller
      operationId: updateBank
      parameters:
      - name: bankId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankAdminRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
    delete:
      tags:
      - bank-admin-rest-controller
      operationId: deleteBank
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: bankId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/aml-list/{amlListId}:
    get:
      tags:
      - aml-list-rest-controller
      operationId: getAmlListById
      parameters:
      - name: amlListId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
    put:
      tags:
      - aml-list-rest-controller
      operationId: updateAmlList
      parameters:
      - name: amlListId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AmlListRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
    delete:
      tags:
      - aml-list-rest-controller
      operationId: deleteAmlList
      parameters:
      - name: amlListId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/user-group:
    post:
      tags:
      - user-group-rest-controller
      operationId: createUserGroup
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroupRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/user-group/get-list:
    get:
      tags:
      - user-group-rest-controller
      operationId: getListUserGroup_1
      parameters:
      - name: pageIndex
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: keyword
        in: query
        required: false
        schema:
          type: string
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
    post:
      tags:
      - user-group-rest-controller
      operationId: getListUserGroup
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroupGetListRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/user-back:
    post:
      tags:
      - user-back-rest-controller
      operationId: createUserBack
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserBackRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/user-back/get-list:
    get:
      tags:
      - user-back-rest-controller
      operationId: getListUserBack_1
      parameters:
      - name: pageIndex
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: userGroupId
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: status
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: keyword
        in: query
        required: false
        schema:
          type: string
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
    post:
      tags:
      - user-back-rest-controller
      operationId: getListUserBack
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserBackGetListRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/user-back/forgot-password:
    post:
      tags:
      - user-back-rest-controller
      operationId: forgotPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordAdminRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/user-back/change-password:
    post:
      tags:
      - user-back-rest-controller
      operationId: changePassword
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/user-back/change-password-forgot:
    post:
      tags:
      - user-back-rest-controller
      operationId: changePasswordForgot
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordForgotAdminRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/transactions/get-list:
    get:
      tags:
      - transaction-admin-rest-controller
      operationId: getTransactionAdminList_1
      parameters:
      - name: keyword
        in: query
        required: false
        schema:
          type: string
      - name: pageIndex
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: fromDate
        in: query
        required: false
        schema:
          type: string
      - name: toDate
        in: query
        required: false
        schema:
          type: string
      - name: transactionType
        in: query
        required: false
        schema:
          type: string
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
    post:
      tags:
      - transaction-admin-rest-controller
      operationId: getTransactionAdminList
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionAdminGetListRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/send-email/resend/{id}:
    post:
      tags:
      - send-email-rest-controller
      operationId: resendEmail
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/send-email/get-list:
    get:
      tags:
      - send-email-rest-controller
      operationId: getListSendEmail_1
      parameters:
      - name: keyword
        in: query
        required: false
        schema:
          type: string
      - name: pageIndex
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: status
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: mailType
        in: query
        required: false
        schema:
          type: string
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
    post:
      tags:
      - send-email-rest-controller
      operationId: getListSendEmail
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailGetListRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/roles:
    get:
      tags:
      - role-rest-controller
      operationId: getListRoles
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
    post:
      tags:
      - role-rest-controller
      operationId: addRole
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/roles/filter:
    post:
      tags:
      - role-rest-controller
      operationId: getListRolesWithPaging
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleGetListRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/products:
    get:
      tags:
      - product-admin-rest-controller
      operationId: getListProducts_1
      parameters:
      - name: pageIndex
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: keyword
        in: query
        required: false
        schema:
          type: string
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
    post:
      tags:
      - product-admin-rest-controller
      operationId: createProduct
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductAdminRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/products/get-list:
    post:
      tags:
      - product-admin-rest-controller
      operationId: getListProducts
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductGetListRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/position:
    post:
      tags:
      - position-admin-rest-controller
      operationId: addPosition
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PositionAdminRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/position/get-list:
    get:
      tags:
      - position-admin-rest-controller
      operationId: getListPosition_1
      parameters:
      - name: keyword
        in: query
        required: false
        schema:
          type: string
      - name: pageIndex
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
    post:
      tags:
      - position-admin-rest-controller
      operationId: getListPosition
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PositionAdminGetListRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/policy/update-policy:
    post:
      tags:
      - policy-admin-rest-controller
      operationId: updatePolicyInformation
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: policyId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePolicyRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/policy/change-status:
    post:
      tags:
      - policy-admin-rest-controller
      operationId: changePolicyStatus
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: status
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: policyId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/otps/get-list:
    post:
      tags:
      - otp-rest-controller
      operationId: getListOtps
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OtpGetListRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/otp-template/get-list-otp-template:
    get:
      tags:
      - otp-template-rest-controller
      operationId: getListPageOtpTemplate
      parameters:
      - name: pageIndex
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: keyword
        in: query
        required: false
        schema:
          type: string
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
    post:
      tags:
      - otp-template-rest-controller
      operationId: getListOtpTemplate
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OtpTemplateRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/occupation:
    post:
      tags:
      - occupation-rest-controller
      operationId: createOccupation
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OccupationRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/occupation/get-list:
    get:
      tags:
      - occupation-rest-controller
      operationId: getListOtps_1
      parameters:
      - name: pageIndex
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: keyword
        in: query
        required: false
        schema:
          type: string
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
    post:
      tags:
      - occupation-rest-controller
      operationId: getListOccupation
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OccupationGetListRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/decision-policy:
    get:
      tags:
      - decision-policy-admin-rest-controller
      operationId: getAllDecisionPolicy
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
    post:
      tags:
      - decision-policy-admin-rest-controller
      operationId: addDecisionPolicy
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DecisionPolicyRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/customers/get-list-customer:
    get:
      tags:
      - customer-rest-controller
      operationId: getListPageCustomer
      parameters:
      - name: pageIndex
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: keyword
        in: query
        required: false
        schema:
          type: string
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
    post:
      tags:
      - customer-rest-controller
      operationId: getListCustomer
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerAdminRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/customers/filter:
    post:
      tags:
      - customer-rest-controller
      operationId: getListCustomerByFilter
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminRequestFilter'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/contracts/get-list-contract:
    post:
      tags:
      - contract-rest-controller
      operationId: getListContract
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContractAdminRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/contracts/filter:
    post:
      tags:
      - contract-rest-controller
      operationId: getListContractByFilter
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminRequestFilter'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/black-list:
    post:
      tags:
      - black-list-rest-controller
      operationId: createBlackList
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlackListRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/black-list/import:
    post:
      tags:
      - black-list-rest-controller
      operationId: importBlackList
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
              - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/black-list/get-list:
    get:
      tags:
      - black-list-rest-controller
      operationId: getListBlackList_1
      parameters:
      - name: keyword
        in: query
        required: false
        schema:
          type: string
      - name: pageIndex
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
    post:
      tags:
      - black-list-rest-controller
      operationId: getListBlackList
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlackListGetListRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/bank:
    post:
      tags:
      - bank-admin-rest-controller
      operationId: createBank
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankAdminRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/bank/get-list:
    get:
      tags:
      - bank-admin-rest-controller
      operationId: getListBank_1
      parameters:
      - name: keyword
        in: query
        required: false
        schema:
          type: string
      - name: pageIndex
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
    post:
      tags:
      - bank-admin-rest-controller
      operationId: getListBank
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankAdminGetListRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/authentication/refresh-token:
    post:
      tags:
      - admin-authentication-rest-controller
      operationId: refreshTokenAdmin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/authentication/logout:
    post:
      tags:
      - admin-authentication-rest-controller
      operationId: adminLogout
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/authentication/login:
    post:
      tags:
      - admin-authentication-rest-controller
      operationId: adminLogin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/aml-list:
    post:
      tags:
      - aml-list-rest-controller
      operationId: createAmlList
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AmlListRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/aml-list/import:
    post:
      tags:
      - aml-list-rest-controller
      operationId: importAmlList
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
              - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/aml-list/get-list:
    get:
      tags:
      - aml-list-rest-controller
      operationId: getListAmlList_1
      parameters:
      - name: keyword
        in: query
        required: false
        schema:
          type: string
      - name: pageIndex
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
    post:
      tags:
      - aml-list-rest-controller
      operationId: getListAmlList
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AmlListGetListRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/actions/get-list:
    get:
      tags:
      - action-rest-controller
      operationId: getListAction_1
      parameters:
      - name: keyword
        in: query
        required: false
        schema:
          type: string
      - name: pageIndex
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
    post:
      tags:
      - action-rest-controller
      operationId: getListAction
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActionGetListRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/user-group/{userId}:
    get:
      tags:
      - user-group-rest-controller
      operationId: getUserGroupById
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/user-group/get-all:
    get:
      tags:
      - user-group-rest-controller
      operationId: listUserGroup
      parameters:
      - name: keyword
        in: query
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/user-back/{userId}:
    get:
      tags:
      - user-back-rest-controller
      operationId: getUserBackById
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/services:
    get:
      tags:
      - service-rest-controller
      operationId: getListServices
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/send-email/{sendEmailId}:
    get:
      tags:
      - send-email-rest-controller
      operationId: getSendEmailById
      parameters:
      - name: sendEmailId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/roles/get-list:
    get:
      tags:
      - role-rest-controller
      operationId: getListRoles_1
      parameters:
      - name: pageIndex
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: keyword
        in: query
        required: false
        schema:
          type: string
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/products/get-list-ProductType:
    get:
      tags:
      - product-admin-rest-controller
      operationId: getListProductType
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/products/get-list-PinLength:
    get:
      tags:
      - product-admin-rest-controller
      operationId: getListPinLength
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/products/get-list-BrandName:
    get:
      tags:
      - product-admin-rest-controller
      operationId: getListBrandName
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/policy/{policyId}:
    get:
      tags:
      - policy-admin-rest-controller
      operationId: getPolicyById
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: policyId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/policy/list:
    get:
      tags:
      - policy-admin-rest-controller
      operationId: getAllPolicyType
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: limit
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: policyStatus
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/otps:
    get:
      tags:
      - otp-rest-controller
      operationId: getListOtpLogs
      parameters:
      - name: pageIndex
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: keyword
        in: query
        required: false
        schema:
          type: string
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/dashboards:
    get:
      tags:
      - dashboard-rest-controller
      operationId: getDashboard
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/dashboards/transactions:
    get:
      tags:
      - dashboard-rest-controller
      operationId: getTracsactionStatistic
      parameters:
      - name: filterType
        in: query
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/customers/list-params:
    get:
      tags:
      - customer-rest-controller
      operationId: getAllParamsOfContract
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/contracts/list-params:
    get:
      tags:
      - contract-rest-controller
      operationId: getAllParamsOfContract_1
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/black-list/getFileImport:
    get:
      tags:
      - black-list-rest-controller
      operationId: getFileImport
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: binary
  /api/v1/admin/aml-list/getFileImport:
    get:
      tags:
      - aml-list-rest-controller
      operationId: getFileImport_1
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: binary
  /api/v1/admin/actions/{actionId}:
    get:
      tags:
      - action-rest-controller
      operationId: getActionById
      parameters:
      - name: actionId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/admin/user-group/{UserGroupId}:
    delete:
      tags:
      - user-group-rest-controller
      operationId: deleteUserGroup
      parameters:
      - name: UserGroupId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
components:
  schemas:
    UserGroupRequest:
      type: object
      properties:
        userGroupCode:
          type: string
        userGroupName:
          type: string
        description:
          type: string
        roles:
          type: array
          items:
            type: integer
            format: int32
    UpdateUserBackRequest:
      type: object
      properties:
        phone:
          type: string
        userGroupId:
          type: integer
          format: int32
        fullname:
          type: string
        email:
          type: string
    RoleRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        listServiceId:
          type: array
          items:
            type: integer
            format: int32
    ProductAdminRequest:
      type: object
      properties:
        cardType:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
        productCode:
          type: string
        brandName:
          type: string
        pinLength:
          type: integer
          format: int32
        liabCode:
          type: string
    PositionAdminRequest:
      type: object
      properties:
        positionName:
          type: string
        description:
          type: string
    UpdateOtpTemplateRequest:
      type: object
      properties:
        content:
          type: string
    UpdateOccupationRequest:
      type: object
      properties:
        description:
          type: string
        occupationName:
          type: string
        id:
          type: integer
          format: int32
    DecisionPolicyRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        lowerThreshold:
          type: number
          format: double
        higherThreshold:
          type: number
          format: double
        creditLimit:
          type: integer
          format: int32
        isApproved:
          type: integer
          format: int32
    UpdateCustomerRequest:
      type: object
      properties:
        id:
          type: integer
          format: int32
        baseAddress:
          type: string
        cardAddress:
          type: string
        clientNumber:
          type: string
        company:
          type: string
        customerName:
          type: string
        dob:
          type: string
        email:
          type: string
        flag:
          type: integer
          format: int32
        gender:
          type: string
        idCardNumber:
          type: string
        idCardType:
          type: string
          format: byte
        issueDate:
          type: string
        issuePlace:
          type: string
        nationality:
          type: string
        perAddress:
          type: string
        salary:
          type: integer
          format: int32
        yob:
          type: integer
          format: int32
        occupationId:
          type: integer
          format: int32
        positionId:
          type: integer
          format: int32
        userConsumerId:
          type: integer
          format: int32
    BlackListRequest:
      type: object
      properties:
        customerName:
          type: string
        idCardNumber:
          type: string
        dob:
          type: string
    BankAdminRequest:
      type: object
      properties:
        bankName:
          type: string
        bankCode:
          type: string
    AmlListRequest:
      type: object
      properties:
        fullName:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        idCardNumber:
          type: string
        dob:
          type: string
    UserGroupGetListRequest:
      type: object
      properties:
        keyword:
          type: string
        pageIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        groupId:
          type: integer
          format: int32
        status:
          type: integer
          format: int32
    UserBackRequest:
      type: object
      properties:
        id:
          type: integer
          format: int32
        phone:
          type: string
        userGroupId:
          type: integer
          format: int32
        username:
          type: string
        password:
          type: string
        fullname:
          type: string
        email:
          type: string
    UserBackGetListRequest:
      type: object
      properties:
        keyword:
          type: string
        pageIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        groupId:
          type: integer
          format: int32
        status:
          type: integer
          format: int32
    ForgotPasswordAdminRequest:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
    ChangePasswordRequest:
      type: object
      properties:
        oldPass:
          type: string
        newPass:
          type: string
        actionId:
          type: integer
          format: int32
    ChangePasswordForgotAdminRequest:
      type: object
      properties:
        userBackId:
          type: integer
          format: int32
        newPassword:
          type: string
        code:
          type: string
    TransactionAdminGetListRequest:
      type: object
      properties:
        keyword:
          type: string
        pageIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        fromDate:
          type: string
          format: date-time
        toDate:
          type: string
          format: date-time
        transactionType:
          type: string
    SendEmailGetListRequest:
      type: object
      properties:
        keyword:
          type: string
        pageIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        status:
          type: integer
          format: int32
        mailType:
          type: string
    RoleGetListRequest:
      type: object
      properties:
        keyword:
          type: string
        pageIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
    ProductGetListRequest:
      type: object
      properties:
        keyword:
          type: string
        pageIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
    PositionAdminGetListRequest:
      type: object
      properties:
        keyword:
          type: string
        pageIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
    UpdatePolicyRequest:
      type: object
      properties:
        description:
          type: string
        threshold:
          type: string
        policyCondition:
          type: string
        lowerThreshold:
          type: number
          format: double
        higherThreshold:
          type: number
          format: double
        weight:
          type: number
          format: double
        score:
          type: number
          format: double
        isApproved:
          type: integer
          format: int32
    OtpGetListRequest:
      type: object
      properties:
        keyword:
          type: string
        pageIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
    OtpTemplateRequest:
      type: object
      properties:
        keyword:
          type: string
        pageIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
    OccupationRequest:
      type: object
      properties:
        description:
          type: string
        occupationName:
          type: string
    OccupationGetListRequest:
      type: object
      properties:
        keyword:
          type: string
        pageIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
    CustomerAdminRequest:
      type: object
      properties:
        keyword:
          type: string
        pageIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
    AdminRequestFilter:
      type: object
      properties:
        listFilter:
          type: array
          items:
            $ref: '#/components/schemas/RequestFilterModel'
        pageIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
    RequestFilterModel:
      type: object
      properties:
        param:
          type: string
        value:
          type: string
        condition:
          type: string
        relationNext:
          type: string
    ContractAdminRequest:
      type: object
      properties:
        keyword:
          type: string
        pageIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
    BlackListGetListRequest:
      type: object
      properties:
        keyword:
          type: string
        pageIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
    BankAdminGetListRequest:
      type: object
      properties:
        keyword:
          type: string
        pageIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
    RefreshTokenRequest:
      type: object
      properties:
        refreshToken:
          type: string
    AuthenticationRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    AmlListGetListRequest:
      type: object
      properties:
        keyword:
          type: string
        pageIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
    ActionGetListRequest:
      type: object
      properties:
        keyword:
          type: string
        pageIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
